name: Safety CI

on:
  push:
    branches: [dev, master]
  pull_request:
    branches: [dev, master]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  sanitizers:
    runs-on: ubuntu-24.04
    if: github.event.pull_request.draft == false
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install nightly
        uses: dtolnay/rust-toolchain@nightly
      - run: |
            # to get the symbolizer for debug symbol resolution
            sudo apt install llvm
            cd rust
            # to fix buggy leak analyzer:
            # https://github.com/japaric/rust-san#unrealiable-leaksanitizer
            # ensure there's a profile.dev section
            if ! grep -qE '^[ \t]*[profile.dev]' Cargo.toml; then
                echo >> Cargo.toml
                echo '[profile.dev]' >> Cargo.toml
            fi
            # remove pre-existing opt-levels in profile.dev
            sed -i '/^\s*\[profile.dev\]/,/^\s*\[/ {/^\s*opt-level/d}' Cargo.toml
            # now set opt-level to 1
            sed -i '/^\s*\[profile.dev\]/a opt-level = 1' Cargo.toml
            cat Cargo.toml
        name: Enable debug symbols
      - name: cargo test -Zsanitizer=address
        # only --lib --tests b/c of https://github.com/rust-lang/rust/issues/53945
        run: |
          cd rust
          cargo test --lib --tests --all-features --target x86_64-unknown-linux-gnu
        env:
          ASAN_OPTIONS: "detect_odr_violation=0:detect_leaks=0"
          RUSTFLAGS: "-Z sanitizer=address"
      - name: cargo test -Zsanitizer=leak
        if: always()
        run: |
          cd rust
          cargo test --all-features --target x86_64-unknown-linux-gnu
        env:
          RUSTFLAGS: "-Z sanitizer=leak"
